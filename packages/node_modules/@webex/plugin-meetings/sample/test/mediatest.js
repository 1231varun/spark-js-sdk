import {expect} from 'chai';

import testUsers from '../../../../@ciscospark/test-helper-test-users';

describe('samples', () => {
  describe('browser-call-with-screenshare', () => {
    describe('normal dialing', () => {
      let alice, bob;

      const browserAlice = browser.select('browserAlice');
      const browserBob = browser.select('browserBob');

      before('create test users', () => testUsers.create({count: 2})
        .then((users) => {
          [bob, alice] = users;
        }));

      before('reload browser', () => {
        browser.refresh();
      });

      it('loads the app', () => {
        browser.url('/');
        browser.waitForExist('#access-token', 1500);
      });

      it('connects bob\'s browser', () => {
        expect(browserBob.getTitle()).to.equal('Sample: Meetings Kitchen Sink');
        browserBob.setValue('#access-token', bob.token.access_token);
        browserBob.pause(10000);
        browserBob.click('#connect');

        browserBob.waitUntil(() => {
          // Test runs too quickly sometimes and tries to click before call is fully established
          if (browserBob.getText('#connection-status') !== 'connected') {
            return false;
          }
          return true;
        }, 10000, 'Timed-out waiting for login');
      });

      it('connects alice\'s browser', () => {
        expect(browserAlice.getTitle()).to.equal('Sample: Meetings Kitchen Sink');
        browserAlice.setValue('#access-token', alice.token.access_token);
        browserAlice.pause(10000);
        browserAlice.click('#connect');
        browserAlice.waitUntil(() => {
          // Test runs too quickly sometimes and tries to click before call is fully established
          if (browserAlice.getText('#connection-status') !== 'connected') {
            return false;
          }
          return true;
        }, 10000, 'Timed-out waiting for login');
      });

      it('places call from bob to alice', () => {
        browserAlice.setValue('#invitee', bob.emailAddress);
        browserAlice.click('[title="create"]');
        browserAlice.click('[title="join"]');
        browserAlice.pause(5000);
        browserAlice.click('#addMedia');
      });

      it('bob answers the call', () => {
        browserBob.pause(50000);
        browserBob.waitForVisible('#answer', 20000);
        browserBob.click('#answer');
        browserBob.pause(50000);
        browserBob.waitForVisible('#addMedia', 20000);
        browserBob.click('#addMedia');
        browserBob.pause(50000);
      });

    //   it('starts screensharing', () => {
    //     browser.waitUntil(() => {
    //       // Test runs too quickly sometimes and tries to click before call is fully established
    //       if (browserAlice.getText('#screenshare-tracks') !== '1') {
    //         browserAlice.click('button[title="share screen"]');
    //         return false;
    //       }
    //       return true;
    //     }, 10000, 'Timed-out waiting for screenshare track to be added');
    //   });

    //   it('stops screensharing', (done) => {
    //     // Skip test if we never started the screen share
    //     if (browserAlice.getText('#screenshare-tracks') !== '1') {
    //       done();
    //     }
    //     browser.waitUntil(() => {
    //       // Test runs too quickly sometimes and tries to click before screenshare is fully established
    //       if (browserAlice.getText('#screenshare-tracks') !== '0') {
    //         browserAlice.click('button[title="stop screen share"]');
    //         return false;
    //       }
    //       return true;
    //     }, 10000, 'Timed-out waiting for screenshare track to be removed');
    //   });

    //   it('starts application sharing', () => {
    //     // In case previous screen share failed to stop for some reason
    //     browser.waitUntil(() => {
    //       if (browserAlice.getText('#screenshare-tracks') === '1') {
    //         browserAlice.click('button[title="stop screen share"]');
    //         return false;
    //       }
    //       return true;
    //     }, 10000, 'Timed-out waiting for previous screenshare to stop');

    //     browser.waitUntil(() => {
    //       // Test runs too quickly sometimes and tries to click before screenshare is fully established
    //       browserAlice.click('button[title="share application"]');
    //       return browserAlice.getText('#screenshare-tracks') === '1';
    //     }, 10000, 'Timed-out waiting for application share track to be added');
    //   });

    //   it('ends the call', () => {
    //     browser.pause(5000);
    //     browserBob.click('[title="hangup"]');
    //   });
    });
  });
});
