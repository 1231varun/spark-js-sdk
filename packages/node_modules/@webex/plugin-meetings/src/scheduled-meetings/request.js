import {map} from 'lodash';
import btoa from 'btoa';
import {StatelessSparkPlugin} from '@ciscospark/spark-core';

import {MEETINGS, GET, CALENDAR, CALENDAR_EVENTS_API} from '../constants';

/**
 * @class ScheduledMeetingsRequest
 */
export default class ScheduledMeetingsRequest extends StatelessSparkPlugin {
  namespace = MEETINGS;

  /**
   * gets all the scheduled meetings, options will likely have a "max:" option
   * @param {Object} options see plugin-calendar service for options / Calendar Service via cisco API
   * @returns {Promise} containing the array result or rejection
   */
  fetchScheduledMeetings(options) {
    return this.spark.internal.calendar.list(options);
  }

  /**
   * gets all the scheduled meetings by their ids
   * @param {Array} ids all the meeting ids to get the calendar events
   * @returns {Promise} containing the array result or rejection
   */
  fetchScheduledMeetingsByIds(ids) {
    return Promise.all(map(ids, (id) => this.spark.request({
      method: GET,
      service: CALENDAR,
      resource: `${CALENDAR_EVENTS_API}/${btoa(id)}`
    })));
  }
}
