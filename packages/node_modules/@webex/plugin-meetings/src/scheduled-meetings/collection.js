const ScheduledMeetingsCollection = {
  scheduledMeetings: {},

  /**
   *
   * @param {String} id ID of the scheduled meeting you wish to retreive
   * @returns {MeetingInfo} returns a meeting info instance
   */
  get(id) {
    return this.scheduledMeetings[id];
  },

  /**
   *
   * @param {String} id the id of the calendar meeting instance to add to the collection
   * @param {Object} scheduledMeeting the full scheduled meeting
   * @returns {undefined}
   */
  set(id, scheduledMeeting) {
    this.scheduledMeetings[id] = scheduledMeeting;
  },

  /**
   * @param {Array} scheduledMeetings array of scheduled meetings to replace current instance with
   * @returns {undefined}
   */
  setAll(scheduledMeetings) {
    if (!scheduledMeetings && !scheduledMeetings.length) {
      throw new Error('The scheduled meetings to populate the collection must be an Array');
    }
    this.scheduledMeetings = {};
    scheduledMeetings.forEach((scheduledMeeting) => {
      this.set(scheduledMeeting.id, scheduledMeeting);
    });
  },

  /**
   * @returns {Object} returns an object map of calendar meetings
   */
  getAll() {
    return this.scheduledMeetings;
  }
};

export default ScheduledMeetingsCollection;
