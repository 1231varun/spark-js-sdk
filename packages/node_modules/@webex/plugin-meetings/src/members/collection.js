import {MEETINGS} from '../constants';

import MembersUtil from './util';

/**
 * @class MembersCollection
 */
export default class MembersCollection {
  namespace = MEETINGS;

  /**
   * @param {Object} locus
   * @memberof Members
   */
  constructor(locus) {
    this.create(locus);
  }

  /**
   * @param {Object} locus the initial join locus object to set up the members
   * @returns {Object} the MembersCollection once initialized
   * @memberof MembersCollection
   */
  create(locus) {
    if (!this.members) {
      this.members = {
        selfList: [],
        hostList: [],
        inLobbyList: [],
        inMeetingList: [],
        notInMeetingList: []
        // TODO: toAdmitList: [],
      };
    }
    if (locus) {
      const hostId = MembersUtil.extractHostOwner(locus);
      const userId = MembersUtil.extractSelfUserId(locus);
      MembersUtil.constructMembers(locus, this.members, userId, hostId);
    }
    return this.members;
  }

  /**
   * @returns {Object} returns an object map of Member instances
   * @memberof MembersCollection
   */
  getAll() {
    return this.members;
  }
}
