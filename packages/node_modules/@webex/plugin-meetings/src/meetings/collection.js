import {pickBy, find} from 'lodash';

const MeetingCollection = {
  meetings: {},

  /**
   *
   * @param {String} meetingId ID of the meeting you wish to retreive
   * @returns {Meeting} returns a meeting object
   * @memberof MeetingCollection
   */
  get(meetingId) {
    return this.meetings[meetingId];
  },

  /**
   *
   * @param {Meeting} meeting An instance of a Meeting to add to the collection
   * @returns {Meeting} returns the meeting that was added
   * @memberof MeetingCollection
   */
  set(meeting) {
    this.meetings[meeting.id] = meeting;

    return this.meetings[meeting.id];
  },

  /**
   *
   * @param {Object} options An object containg properties to filter by
   * @param {Boolean} options.active Only return active meetings
   * @returns {Object} returns an object map of Meeting instances
   * @memberof MeetingCollection
   */
  getAll(options) {
    if (options.active) {
      return pickBy(this.meetings, (value) => value.active);
    }

    return this.meetings;
  },


  /**
   * @param {String} key
   * @param {Any} value
   * @returns {Object} if found, else returns null
   * @memberof MeetingCollection
   */
  getByKey(key, value) {
    if (key && value) {
      return find(this.meetings, (meeting) => (meeting[key] === value));
    }
    return null;
  }
};

export default MeetingCollection;
