import {StatelessSparkPlugin} from '@ciscospark/spark-core';

import {LOCUS, MEETINGS} from '../constants';

import MeetingInfoUtil from './util';
/**
 * @class MeetingInfoRequest
 */
export default class MeetingInfoRequest extends StatelessSparkPlugin {
  namespace = MEETINGS;

  /**
   *
   * @param {Object} options
   * @returns {Promise} returns a promise that resolves/rejects the result of the request
   */
  fetchMeetingInfo(options) {
    if (!options || !options.type || !options.destination) {
      throw new Error('MeetingInfo should be fetched with a type and destination specified, see list of valid types and their corresponding values in constants');
    }
    const typeValue = MeetingInfoUtil.getMeetingInfoTypeValue(options);
    return this.request(MeetingInfoUtil.getRequestParams(MeetingInfoUtil.getResourceUrl(typeValue.type, typeValue.value), typeValue.type, typeValue.value, LOCUS));
  }
}
