const InfoUtils = {};

InfoUtils.parse = (info) => ({
  policy: InfoUtils.parsePolicy(info),
  type: InfoUtils.parseMeetingType(info)
});
InfoUtils.parsePolicy = (info) => {
  const policy = {};
  // Parses the policy to show valid uses
  if (info.displayHints.joined && info.displayHints.joined.length > 0) {
    // TODO: find a better way
    info.displayHints.joined.forEach((key) => {
      policy[key] = true;
    });
  }
  return policy;
};

InfoUtils.parseMeetingType = (info) => {
  let type = 'UNKNOWN';
  if (info.locusTags.indexOf('ONE_ON_ONE') >= 0) {
    type = 'ONE_ON_ONE';
  }
  if (info.locusTags.indexOf('MEEING') >= 0) {
    type = 'MEETING';
  }
  return type;
};

export default InfoUtils;
