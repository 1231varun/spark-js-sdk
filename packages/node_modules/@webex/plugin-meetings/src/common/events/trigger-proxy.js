import LoggerProxy from '../logs/logger-proxy';
import LoggerConfig from '../logs/logger-config';

const TriggerProxy = {};

TriggerProxy.trigger = (instance, trigger, payload) => {
  if (!instance || !instance.trigger) {
    throw new Error('Instance to trigger from must be defined and have a trigger function.');
  }
  let argString = '';

  try {
    argString = JSON.stringify(payload);
  }
  catch (e) {
    // no op
  }
  LoggerProxy.logger.warn(`TriggerProxy->trigger#${trigger}${LoggerConfig.verboseEvents ? ` -- ${argString}` : ''}`);

  return instance.trigger(trigger, payload);
};

export default TriggerProxy;
