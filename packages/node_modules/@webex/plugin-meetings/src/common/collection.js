import {MEETINGS} from '../constants';

/**
 * @class Collection
 */
export default class Collection {
  namespace = MEETINGS;

  /**
   * @param {String} property
   * @memberof Collection
   */
  constructor(property) {
    /**
     * The property name for what collection will be stored, i.e., this.meetingInfos, this.meetings, etc.
     * @instance
     * @type {String}
     * @public
     * @memberof Meetings
     */
    this.propertyName = property;
    /**
     * The actual object for the collection
     * @instance
     * @type {Object}
     * @public
     * @memberof Meetings
     */
    this[this.propertyName] = {};
  }

  /**
   * @param {String} id ID of the thing stuffed into the collection at id location
   * @returns {Any} returns whatever is being stuffed into the collection
   * @public
   * @memberof Collection
   */
  get(id) {
    if (this[this.propertyName] && this[this.propertyName][id]) {
      return this[this.propertyName][id];
    }
    return null;
  }

  /**
   * @param {String} id the id of the meeting info instance to add to the collection
   * @param {Any} value the thing to set in the collection
   * @returns {Any} returns the thing just put in the collection
   * @public
   * @memberof Collection
   */
  set(id, value) {
    this[this.propertyName][id] = value;
    return this.get(id);
  }

  /**
   * remove the thing at the id
   * @param {String} id ID of the thing you wish to delete from the collection
   * @returns {Any} returns the thing that was removed
   * @public
   * @memberof Collection
   */
  delete(id) {
    let deleted = this[this.propertyName][id];
    delete this[this.propertyName][id];
    deleted = null;
    return deleted;
  }

  /**
   * @returns {Object} returns an object map of things stuffed into the collection
   * @public
   * @memberof Collection
   */
  getAll() {
    return this[this.propertyName];
  }

  /**
   * @param {Object} set the replacement object
   * @returns {Object} returns an object map of things stuffed into the collection
   * @public
   * @memberof Collection
   */
  setAll(set) {
    this[this.propertyName] = set;
    return this.getAll();
  }
}
