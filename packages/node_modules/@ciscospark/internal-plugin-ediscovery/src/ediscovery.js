/* eslint-disable prefer-template */
/*!
 * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.
 */

import {waitForValue, SparkPlugin} from '@ciscospark/spark-core';

import reportRequest from './report-request';

const Ediscovery = SparkPlugin.extend({
  namespace: 'Ediscovery',

  @waitForValue('@')
  createReport(user, keywords, spaceNames, spaceIds, range) {
    const self = this;
    this.spark.internal.user.asUUID(user).then((uuids) => {
      const body = reportRequest;
      body.userIds = uuids;
      body.keywords = keywords;
      body.spaceNames = spaceNames;
      body.spaceIds = spaceIds;
      body.range = range;

      return self.request({
        method: 'POST',
        service: 'ediscovery',
        resource: 'reports',
        body
      }).then((res) => {
        console.log(res);
        return res;
      }).catch((reason) => {
        console.log(reason);
        return reason;
      });
    }).catch((reason) => {
      console.log(reason);
      return reason;
    });
  },

  @waitForValue('@')
  getReports() {
    return this.request({
      method: 'GET',
      service: 'ediscovery',
      resource: 'reports'
    }).then((res) => {
      console.log(res);
      return res;
    }).catch((reason) => {
      console.log(reason);
      return reason;
    });
  }
});

export default Ediscovery;
