import Ediscovery from '@ciscospark/internal-plugin-ediscovery';
import MockSpark from '@ciscospark/test-helper-mock-spark';
import sinon from '@ciscospark/test-helper-sinon/src/index';
import {expect} from '@ciscospark/test-helper-chai';

describe('Ediscovery Content API Tests', () => {
  let spark;
  const url = 'https://ediscovery-test.wbx2.com/ediscovery';
  const uuid = 'cc06f622-46ab-45b9-b3a6-5d70bad1d70a';

  beforeEach(() => {
    spark = new MockSpark({
      children: {
        ediscovery: Ediscovery
      }
    });
    spark.internal.device.getServiceUrl = sinon.stub().returns(Promise.resolve(url));
  });

  describe('Get Content Summary Tests', () => {
    it('getContentSummaryPagedSuccess', async () => {
      const result = spark.internal.ediscovery.getPagedContentSummary(uuid, 0, 10).then((res) => {
        expect(res.statusCode).to.equal(200);
      });
      return result;
    });

    it('getContentSummaryWithNoParamFailure', async () => {
      const result = expect(spark.internal.ediscovery.getContentSummary()).to.be.rejectedWith(Error, 'Invalid parameter(s)');
      return result;
    });
  });
});
