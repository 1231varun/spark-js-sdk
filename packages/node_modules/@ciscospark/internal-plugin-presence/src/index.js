/**!
 *
 * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.
 * @private
 */
import '@ciscospark/internal-plugin-wdm';

import {registerInternalPlugin} from '@ciscospark/spark-core';
import {has} from 'lodash';

import Presence from './presence';
import config from './config';

registerInternalPlugin(`presence`, Presence, {
  payloadTransformer: {
    predicates: [
      {
        name: `normalizeSingleStatusResponse`,
        direction: `inbound`,
        test(ctx, response) {
          return Promise.resolve(has(response, `body.eventType`));
        },
        extract(response) {
          return Promise.resolve(response);
        }
      },
      {
        name: `normalizeStatusResponses`,
        direction: `inbound`,
        test(ctx, response) {
          return Promise.resolve(has(response, `body.statusList`) || has(response, `body.responses`));
        },
        extract(response) {
          return Promise.resolve(response);
        }
      }
    ],
    transforms: [
      {
        name: `normalizeSingleStatusResponse`,
        direction: `inbound`,
        fn(ctx, response) {
          const object = response.body;
          const processed = {};
          processed[object.subject] = {
            subject: object.subject,
            status: object.eventType,
            expires: object.expires,
            expiresTTL: object.expiresTTL
          };
          response.body = processed;
        }
      },
      {
        name: `normalizeStatusResponses`,
        direction: `inbound`,
        fn(ctx, response) {
          let statuses;
          if (has(response, `body.statusList`)) {
            statuses = response.body.statusList;
          }
          else if (has(response, `body.responses`)) {
            statuses = response.body.responses;
          }
          else {
            return Promise.resolve();
          }
          // Convert array of statuses to an object
          const processed = {};
          statuses.forEach((status) => {
            if (!status.subject) {
              return;
            }
            processed[status.subject] = status;
          });
          response.body = processed;
          return Promise.resolve();
        }
      }
    ]
  },
  config
});

export {default as default} from './presence';
