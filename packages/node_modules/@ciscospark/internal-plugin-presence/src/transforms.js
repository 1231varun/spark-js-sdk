/**
 * Formats a status response into a consumable object
 * @param {Array} responses
 * @returns {Object}
 */
export function transformStatusResponses(responses) {
  // Convert array of responses to an object
  const processed = {};
  responses.forEach((response) => {
    if (!response.subject) {
      return;
    }
    processed[response.subject] = {
      subject: response.subject,
      status: response.status,
      statusTime: response.statusTime,
      lastActive: response.lastActive,
      expires: response.expires,
      expiresTTL: response.expiresTTL
    };
  });
  return processed;
}

/**
 * Formats a single status response into a consumable object
 * @param {Object} response
 * @returns {Object}
 */
export function transformSingleStatusResponse(response) {
  const processed = {};
  processed[response.subject] = {
    subject: response.subject,
    status: response.eventType,
    expires: response.expires,
    expiresTTL: response.expiresTTL
  };
  return processed;
}
