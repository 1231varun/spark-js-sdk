/* eslint-disable prefer-template */
/*!
 * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.
 */

import {waitForValue, SparkPlugin} from '@ciscospark/spark-core';

import reportRequest from './report-request';

const EDiscoveryReportClient = SparkPlugin.extend({
  namespace: 'EDiscoveryReportClient',

  @waitForValue('@')
  createReport(userIds, keywords, spaceNames, spaceIds, range) {
    const body = reportRequest;
    body.userIds = userIds;
    body.keywords = keywords;
    body.spaceNames = spaceNames;
    body.spaceIds = spaceIds;
    body.range = range;

    return this.request({
      method: 'POST',
      service: 'ediscovery',
      resource: 'report',
      body
    }).then((res) => this._processCreateReportSuccess(res));
  },

  _processCreateReportSuccess(res) {
    this.set(res.body);
    console.log('CreateReport response body set');
  },

  @waitForValue('@')
  getReports() {
    return this.request({
      method: 'GET',
      service: 'ediscovery',
      resource: 'reports'
    }).then((res) => this._processGetReportsSuccess(res));
  },

  _processGetReportsSuccess(res) {
    this.set(res.body);
    console.log('GetReports response body set');
  }
});


export default EDiscoveryReportClient;
